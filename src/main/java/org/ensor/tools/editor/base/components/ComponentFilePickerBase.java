/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ComponentFilePicker.java
 *
 * Created on Apr 25, 2011, 9:22:49 PM
 */
package org.ensor.tools.editor.base.components;

import java.io.File;

/**
 *
 * @author Jon
 */
public class ComponentFilePickerBase extends javax.swing.JPanel {
    String                          mRootPath;
    String                          mRelativePath;
    javax.swing.filechooser.FileFilter mFileFilter;
    /** Creates new form ComponentFilePicker */
    public ComponentFilePickerBase() {
        initComponents();
        mRelativePath = "";
        mRootPath = "/";
        mFilename.setText("");
        mFilename.setEditable(false);
        mFileFilter = null;
    }

    public void setRoot(String rootPath) {
        mRootPath = rootPath;
    }
    
    public void setFile(File f) {
        String fullPath = f.getAbsolutePath();
        int rootIndex = fullPath.indexOf(mRootPath);
        if (rootIndex != -1) {
            String rp = fullPath.substring(rootIndex + mRootPath.length());
            setFilename(rp);
        }
    }
    public void setFilename(String relativePath) {
        mRelativePath = relativePath;
        mFilename.setText(relativePath);
    }
    public String getFilename() {
        return mRelativePath;
    }
    public File getFile() {
        return new File(mRootPath + mRelativePath);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mFilename = new javax.swing.JTextField();
        mOpenButton = new javax.swing.JButton();
        mClearButton = new javax.swing.JButton();

        mOpenButton.setText("Open");
        mOpenButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mOpenButtonActionPerformed(evt);
            }
        });

        mClearButton.setText("Clear");
        mClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mClearButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(mOpenButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mClearButton)
                .addContainerGap(278, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(mFilename, javax.swing.GroupLayout.DEFAULT_SIZE, 378, Short.MAX_VALUE)
                .addGap(22, 22, 22))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(mFilename, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mOpenButton)
                    .addComponent(mClearButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void mOpenButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mOpenButtonActionPerformed
        javax.swing.JFileChooser fileChooser = new javax.swing.JFileChooser();
        //fileChooser.setFileFilter(null)
        if (mFileFilter != null) {
            fileChooser.setFileFilter(mFileFilter);
        }
        fileChooser.setCurrentDirectory(new File(mRootPath));
        int returnVal = fileChooser.showOpenDialog(this);
        if(returnVal == javax.swing.JFileChooser.APPROVE_OPTION) {
            setFile(fileChooser.getSelectedFile());
        }
    }//GEN-LAST:event_mOpenButtonActionPerformed

    private void mClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mClearButtonActionPerformed
        mFilename.setText("");
    }//GEN-LAST:event_mClearButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton mClearButton;
    private javax.swing.JTextField mFilename;
    private javax.swing.JButton mOpenButton;
    // End of variables declaration//GEN-END:variables
}
