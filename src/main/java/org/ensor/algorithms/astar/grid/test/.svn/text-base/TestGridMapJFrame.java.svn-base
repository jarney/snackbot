/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TestGridMapJFrame.java
 *
 * Created on May 27, 2010, 10:14:39 AM
 */

package com.bfc.util.pathfinding.grid.test;
import com.bfc.util.pathfinding.Path;
import com.bfc.util.pathfinding.grid.GridMap;
import com.bfc.util.pathfinding.grid.GridMapCompassMoves;
import com.bfc.util.pathfinding.grid.GridMover;
import com.bfc.util.pathfinding.grid.GridNode;

import java.util.Iterator;

/**
 *
 * @author Jon
 */
public class TestGridMapJFrame extends javax.swing.JFrame {
    public TestGridMapCanvas mTestCanvas;
    public GridMap              mGridMap;
    public GridNode             mStartPoint;
    public GridNode             mEndPoint;
    public GridMover            mMover;
    public Path<GridNode>       mPath;
    public static final int STATE_MAP_SET = 1;
    public static final int STATE_MAP_CLEAR = 2;
    public static final int STATE_START_POS_CHANGE = 3;
    public static final int STATE_END_POS_CHANGE = 4;
    public int mState;
    /** Creates new form TestGridMapJFrame */
    public TestGridMapJFrame() {
        initComponents();
        mGridMap = new GridMapCompassMoves();
        mMover = new GridMover();
        mMover.passableFlags = 1;
        mStartPoint = null;
        mEndPoint = null;
        mState = STATE_MAP_SET;
        
        
        mTestCanvas = new TestGridMapCanvas(this);
        mTestCanvas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                onCanvasMouseClicked(evt);
            }
        });
        mTestCanvas.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                onCanvasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(mTestCanvas);
    }
    private void mapToggle(int i, int j, boolean draw) {
        if (draw) {
           mGridMap.addNode(i, j, 1);
       }
       else {
           mGridMap.removeNode(i, j);
       }
    }
    private void setStart(int i, int j) {
        mStartPoint = new GridNode();
        mStartPoint.x = i;
        mStartPoint.y = j;
    }
    private void setEnd(int i, int j) {
        mEndPoint = new GridNode();
        mEndPoint.x = i;
        mEndPoint.y = j;
    }
    private void onCanvasMouseClicked(java.awt.event.MouseEvent evt) {
       int x = evt.getX();
       int y = evt.getY();
       int i = x/10;
       int j = y/10;

       switch (mState) {
           case STATE_MAP_SET:
                mapToggle(i,j, true);
                break;
           case STATE_MAP_CLEAR:
                mapToggle(i,j, false);
                break;
           case STATE_START_POS_CHANGE:
                setStart(i,j);
                break;
           case STATE_END_POS_CHANGE:
                setEnd(i,j);
                break;
       }
       render();
    }
    private void render() {
        if (mStartPoint != null && mEndPoint != null) {
            mPath = mGridMap.findPath(mMover, mStartPoint, mEndPoint, 40);
        }
        mTestCanvas.repaint();
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        mSetMapButton = new javax.swing.JButton();
        mSetStartPosButton = new javax.swing.JButton();
        mSetEndPosButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        mSetMapButton.setText("Set Map");
        mSetMapButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mSetMapButtonMouseClicked(evt);
            }
        });

        mSetStartPosButton.setText("Set Start Pos");
        mSetStartPosButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mSetStartPosButtonMouseClicked(evt);
            }
        });

        mSetEndPosButton.setText("Set End Pos");
        mSetEndPosButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mSetEndPosButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(mSetMapButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mSetStartPosButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mSetEndPosButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mSetMapButton)
                    .addComponent(mSetStartPosButton)
                    .addComponent(mSetEndPosButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mSetEndPosButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mSetEndPosButtonMouseClicked
        mState = STATE_END_POS_CHANGE;
    }//GEN-LAST:event_mSetEndPosButtonMouseClicked

    private void mSetStartPosButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mSetStartPosButtonMouseClicked
        mState = STATE_START_POS_CHANGE;
    }//GEN-LAST:event_mSetStartPosButtonMouseClicked

    private void mSetMapButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mSetMapButtonMouseClicked
        if (mState == STATE_MAP_SET) {
            mState = STATE_MAP_CLEAR;
        }
        else {
            mState = STATE_MAP_SET;
        }
    }//GEN-LAST:event_mSetMapButtonMouseClicked

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TestGridMapJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton mSetEndPosButton;
    private javax.swing.JButton mSetMapButton;
    private javax.swing.JButton mSetStartPosButton;
    // End of variables declaration//GEN-END:variables

}
